* fxruby-enhancement
** Introduction
   The fxruby library is an excellent wrapper for the FOX toolkit. However, it reflects the
   C++-ness of FOX, rather than being more Ruby-like. As such, creating composed objects with
   it tends to be rather ugly and cumbersome.

   fxruby-enhancement is a wrapper for the wrapper, to "rubyfy" it and make it more easy to 
   use for Rubyists. 

   fxruby-enhancement is basically a DSL of sorts, and every effort has been taken to make 
   it intuitive to use. Once you get the hang of it, you should be able to look at the FXRuby
   API documentation and infer the DSL construct for fxruby-enhancement.

** Documentation
*** binding.fx   
    This is a way to split up your layouts into different .fx "modules", purely for
    organizational reasons. For example,

    #+begin_src ruby
    binding.fx "overview"
    #+end_src

    will load the overview.fx portion of the GUI, which happens to be a tab contents
    in the tab book, which in our case looks like:

    #+begin_src ruby
    # Overview Tab

    fx_tab_item { text "&Overview" }
    fx_horizontal_frame (:overview_info) {
      opts STD_FRAME|LAYOUT_FILL_Y
  
      fx_group_box (:ov_connections_group) {
        text "Connections"
        opts STD_GROUPBOX|LAYOUT_FILL_Y
    
        fx_vertical_frame {
          opts LAYOUT_FILL_Y|LAYOUT_FILL_X #|PACK_UNIFORM_HEIGHT
      
          fx_group_box (:ov_conn_rabbitmq) {
    ...
    #+end_src


*** Examples
    Class-based enhancement:
    #+begin_src ruby
    class Main < FXMainWindow

      compose :my_window do
        title "RubyNEAT Panel"
        show PLACEMENT_SCREEN
        width 700
        height 400
        fx_tab_book :my_book do |tab_book_ob|
          x 0
          y 0
          width 500
          height 100
          pad_bottom 10
          fx_text :my_text1, :my_window { |text_ob|
            width 200
            height 100
            text_ob.target my_window: :on_click
          }
          fx_text :my_text2, :my_window { |text_ob|
            width 200
            height 100
            text_ob { |t| puts "called after object initialization" }
          }
        end
      end

      def on_click
        ...
      end
    end    
    #+end_src

    Class-free enhancement:
    #+begin_src ruby
    mw = fx_main_window :my_window do 
        title "RubyNEAT Panel"
        width 700
        height 400
        opts DECOR_ALL
        x 10
        y 10
        instance { show PLACEMENT_SCREEN }
        fx_tab_book :my_book do |tab_book_ob|
          x 0
          y 0
          width 500
          height 100
          pad_bottom 10
          fx_text :my_text1, :my_window { |text_ob|
            width 200
            height 100
            instance my_window: :on_click
          }
          fx_text :my_text2, :my_window { 
            width 200
            height 100
            instance { |t| puts "called after object initialization" }
          }
        end
      end

      def mw.on_click
        ...
      end
    end    
    #+end_src



** TODO Release Notes
** TODO Known Issues
** Contributing to fxruby-enhancement
 
   - Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
   - Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
   - Fork the project.
   - Start a feature/bugfix branch.
   - Commit and push until you are happy with your contribution.
   - Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
   - Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

** Copyright

   Copyright (c) 2016-2017 Fred Mitchell. See LICENSE.txt for
   further details.
** The Scratchpad
   These are my personal notes, not meant for anyone else.
   You may see some interesting tidbits here, but I am not
   gauranteeing anything to be useful or reliable in this
   section. YOU HAVE BEEN WARNED.
*** Genesis of the meta-meta programming, whereby brain goes boom
    #+begin_src ruby
    class FXToolBar # monkey patch
      include Enhancement
      attr_accessor :_o
    end

    def fx_tool_bar name, &block # DSL
      o = OStruct.new
      o.title = "default title"
      ...

      def o.title t 
        @title = t
      end    

      def o.instance a, &block
        o.instance_time_block = block
      end
      f = FXToolBar.new ...
      f._o = o
    end

<% for @class, @details in @api %>
   #<%= @class %> < <%= @details[:class][1] %>
   <% unless @details[:initialize].nil? %>
      <% for @iniparams in @details[:initialize] %>
         #<%= @iniparams %>   
      <% end %>
   <% else %>
      #No initializer
   <% end %>
<% end %>
    #+end_src

