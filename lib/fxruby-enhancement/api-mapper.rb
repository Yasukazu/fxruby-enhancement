# coding: utf-8
=begin rdoc

NOTE WELL:
  This file is generated by fxruby-enhancement.
  Do NOT modify this file. Modify the template
  file instead!!!!
=end

module Fox
  module Enhancement
    module Mapper
      class << self
        def fox_classes
          Fox.constants.select { |k|
            Fox.const_get(k).instance_of? Class
          }
        end

        def fox_initialize_parms
          fox_classes.map { |klass|
            [klass, Fox.const_get(klass)
                .instance_method(:initialize)
                .parameters
                .map{ |typ, nam|
               unless typ == :rest
                 [typ, nam]
               else
                 [:rest,
                  parm_hints(klass).map{ |parm| [:req, parm] }
                 ]
               end
             }
            ]
          }
        end
         
        HINTS = {
        }
        
        def parm_hints klass
          HINTS[klass]
        end        
      end
    end
  end

# Here we include enhancements to all FXRuby classes

   class FX4Splitter
     include Enhancement
     attr_accessor :_o     
   end
   def fx4_splitter name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"FOURSPLITTER_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = FOURSPLITTER_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:p=>nil, :tgt=>nil, :sel=>nil, :opts=>"FOURSPLITTER_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o1.p = :required
           def p var
             @o1.p = var
           end
         
           @o1.tgt = :required
           def tgt var
             @o1.tgt = var
           end
         
           @o1.sel = :required
           def sel var
             @o1.sel = var
           end
         
           @o1.opts = FOURSPLITTER_NORMAL
           def opts var
             @o1.opts = var
           end
         
           @o1.x = 0
           def x var
             @o1.x = var
           end
         
           @o1.y = 0
           def y var
             @o1.y = var
           end
         
           @o1.width = 0
           def width var
             @o1.width = var
           end
         
           @o1.height = 0
           def height var
             @o1.height = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FX4Splitter.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FX7Segment
     include Enhancement
     attr_accessor :_o     
   end
   def fx7_segment name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>nil, :opts=>"SEVENSEGMENT_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.opts = SEVENSEGMENT_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FX7Segment.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXAccelTable
     include Enhancement
     attr_accessor :_o     
   end
   def fx_accel_table name = nil, &block
     
     
     Enhancement.stack << FXAccelTable.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXEvent
     include Enhancement
     attr_accessor :_o     
   end
   def fx_event name = nil, &block
     
     
     Enhancement.stack << FXEvent.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXApp
     include Enhancement
     attr_accessor :_o     
   end
   def fx_app name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:appName=>"\"Application\"", :vendorName=>"\"FoxDefault\""}
         
           @o0.appName = "Application"
           def app_name var
             @o0.appName = var
           end
         
           @o0.vendorName = "FoxDefault"
           def vendor_name var
             @o0.vendorName = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXApp.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXArrowButton
     include Enhancement
     attr_accessor :_o     
   end
   def fx_arrow_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :target=>"nil", :selector=>"0", :opts=>"ARROW_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = ARROW_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXArrowButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXBMPIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxbmp_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"Fox.FXRGB(192,192,192)", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = Fox.FXRGB(192,192,192)
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXBMPIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXBMPImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxbmp_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXBMPImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXBitmap
     include Enhancement
     attr_accessor :_o     
   end
   def fx_bitmap name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil, :pixels=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
           @o0.pixels = nil
           def pixels var
             @o0.pixels = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXBitmap.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXBitmapFrame
     include Enhancement
     attr_accessor :_o     
   end
   def fx_bitmap_frame name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :bmp=>nil, :opts=>"FRAME_SUNKEN|FRAME_THICK", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"0", :padBottom=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.bmp = :required
           def bmp var
             @o0.bmp = var
           end
         
           @o0.opts = FRAME_SUNKEN|FRAME_THICK
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXBitmapFrame.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXBitmapView
     include Enhancement
     attr_accessor :_o     
   end
   def fx_bitmap_view name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :bmp=>"nil", :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.bmp = nil
           def bmp var
             @o0.bmp = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXBitmapView.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXButton
     include Enhancement
     attr_accessor :_o     
   end
   def fx_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :icon=>"nil", :target=>"nil", :selector=>"0", :opts=>"BUTTON_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = BUTTON_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXCURCursor
     include Enhancement
     attr_accessor :_o     
   end
   def fxcur_cursor name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil, :pixels=>nil}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
           @o0.pixels = :required
           def pixels var
             @o0.pixels = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXCURCursor.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXCanvas
     include Enhancement
     attr_accessor :_o     
   end
   def fx_canvas name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXCanvas.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXCheckButton
     include Enhancement
     attr_accessor :_o     
   end
   def fx_check_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :target=>"nil", :selector=>"0", :opts=>"CHECKBUTTON_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = CHECKBUTTON_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXCheckButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXChoiceBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_choice_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :caption=>nil, :text=>nil, :icon=>nil, :choices=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.caption = :required
           def caption var
             @o0.caption = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = :required
           def icon var
             @o0.icon = var
           end
         
           @o0.choices = :required
           def choices var
             @o0.choices = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXChoiceBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXColorBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_color_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXColorBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXColorDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_color_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :title=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.title = :required
           def title var
             @o0.title = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXColorDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXColorItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_color_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :clr=>nil, :data=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.clr = :required
           def clr var
             @o0.clr = var
           end
         
           @o0.data = nil
           def data var
             @o0.data = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXColorItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXColorList
     include Enhancement
     attr_accessor :_o     
   end
   def fx_color_list name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"LIST_BROWSESELECT", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = LIST_BROWSESELECT
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXColorList.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXColorRing
     include Enhancement
     attr_accessor :_o     
   end
   def fx_color_ring name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXColorRing.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXColorSelector
     include Enhancement
     attr_accessor :_o     
   end
   def fx_color_selector name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXColorSelector.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXColorWell
     include Enhancement
     attr_accessor :_o     
   end
   def fx_color_well name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :color=>"0", :target=>"nil", :selector=>"0", :opts=>"COLORWELL_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.color = 0
           def color var
             @o0.color = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = COLORWELL_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXColorWell.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXColorWheel
     include Enhancement
     attr_accessor :_o     
   end
   def fx_color_wheel name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXColorWheel.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXComboBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_combo_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :cols=>nil, :target=>"nil", :selector=>"0", :opts=>"COMBOBOX_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.cols = :required
           def cols var
             @o0.cols = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = COMBOBOX_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXComboBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXComposite
     include Enhancement
     attr_accessor :_o     
   end
   def fx_composite name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXComposite.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXCursor
     include Enhancement
     attr_accessor :_o     
   end
   def fx_cursor name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :curid=>"CURSOR_ARROW"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.curid = CURSOR_ARROW
           def curid var
             @o0.curid = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:a=>nil, :pix=>nil, :width=>"32", :height=>"32", :hotX=>"-1", :hotY=>"-1"}
         
           @o1.a = :required
           def a var
             @o1.a = var
           end
         
           @o1.pix = :required
           def pix var
             @o1.pix = var
           end
         
           @o1.width = 32
           def width var
             @o1.width = var
           end
         
           @o1.height = 32
           def height var
             @o1.height = var
           end
         
           @o1.hotX = -1
           def hot_x var
             @o1.hotX = var
           end
         
           @o1.hotY = -1
           def hot_y var
             @o1.hotY = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:a=>nil, :pixels=>nil, :width=>"32", :height=>"32", :hotX=>"-1", :hotY=>"-1"}
         
           @o2.a = :required
           def a var
             @o2.a = var
           end
         
           @o2.pixels = :required
           def pixels var
             @o2.pixels = var
           end
         
           @o2.width = 32
           def width var
             @o2.width = var
           end
         
           @o2.height = 32
           def height var
             @o2.height = var
           end
         
           @o2.hotX = -1
           def hot_x var
             @o2.hotX = var
           end
         
           @o2.hotY = -1
           def hot_y var
             @o2.hotY = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
     Enhancement.stack << FXCursor.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSegment
     include Enhancement
     attr_accessor :_o     
   end
   def fx_segment name = nil, &block
     
     
     Enhancement.stack << FXSegment.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXArc
     include Enhancement
     attr_accessor :_o     
   end
   def fx_arc name = nil, &block
     
     
     Enhancement.stack << FXArc.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDC
     include Enhancement
     attr_accessor :_o     
   end
   def fxdc name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDC.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPSBounds
     include Enhancement
     attr_accessor :_o     
   end
   def fxps_bounds name = nil, &block
     
     
     Enhancement.stack << FXPSBounds.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPrinter
     include Enhancement
     attr_accessor :_o     
   end
   def fx_printer name = nil, &block
     
     
     Enhancement.stack << FXPrinter.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDCPrint
     include Enhancement
     attr_accessor :_o     
   end
   def fxdc_print name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDCPrint.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDCWindow
     include Enhancement
     attr_accessor :_o     
   end
   def fxdc_window name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:drawable=>nil, :event=>"nil"}
         
           @o0.drawable = :required
           def drawable var
             @o0.drawable = var
           end
         
           @o0.event = nil
           def event var
             @o0.event = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDCWindow.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDataTarget
     include Enhancement
     attr_accessor :_o     
   end
   def fx_data_target name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:value=>"nil", :target=>"nil", :selector=>"0"}
         
           @o0.value = nil
           def value var
             @o0.value = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDataTarget.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDebugTarget
     include Enhancement
     attr_accessor :_o     
   end
   def fx_debug_target name = nil, &block
     
     
     Enhancement.stack << FXDebugTarget.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDelegator
     include Enhancement
     attr_accessor :_o     
   end
   def fx_delegator name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:delegate=>"nil"}
         
           @o0.delegate = nil
           def delegate var
             @o0.delegate = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDelegator.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDial
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dial name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"DIAL_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = DIAL_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDial.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDialogBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dialog_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :title=>nil, :opts=>"DECOR_TITLE|DECOR_BORDER", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"10", :padRight=>"10", :padTop=>"10", :padBottom=>"10", :hSpacing=>"4", :vSpacing=>"4"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.title = :required
           def title var
             @o0.title = var
           end
         
           @o0.opts = DECOR_TITLE|DECOR_BORDER
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 10
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 10
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 10
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 10
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = 4
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = 4
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDialogBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDict
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dict name = nil, &block
     
     
     Enhancement.stack << FXDict.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDirBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dir_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_SUNKEN|FRAME_THICK|TREELISTBOX_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_SUNKEN|FRAME_THICK|TREELISTBOX_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDirBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDirDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dir_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :name=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"500", :height=>"300"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.name = :required
           def name var
             @o0.name = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 500
           def width var
             @o0.width = var
           end
         
           @o0.height = 300
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDirDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDirItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dir_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :oi=>"nil", :ci=>"nil", :data=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.oi = nil
           def oi var
             @o0.oi = var
           end
         
           @o0.ci = nil
           def ci var
             @o0.ci = var
           end
         
           @o0.data = nil
           def data var
             @o0.data = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDirItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDirList
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dir_list name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDirList.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDirSelector
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dir_selector name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDirSelector.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDockBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dock_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :q=>nil, :opts=>"LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"3", :padRight=>"3", :padTop=>"2", :padBottom=>"2", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.q = :required
           def q var
             @o0.q = var
           end
         
           @o0.opts = LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 3
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 3
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 2
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 2
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:p=>nil, :opts=>"LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"3", :padRight=>"3", :padTop=>"2", :padBottom=>"2", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o1.p = :required
           def p var
             @o1.p = var
           end
         
           @o1.opts = LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X
           def opts var
             @o1.opts = var
           end
         
           @o1.x = 0
           def x var
             @o1.x = var
           end
         
           @o1.y = 0
           def y var
             @o1.y = var
           end
         
           @o1.width = 0
           def width var
             @o1.width = var
           end
         
           @o1.height = 0
           def height var
             @o1.height = var
           end
         
           @o1.padLeft = 3
           def pad_left var
             @o1.padLeft = var
           end
         
           @o1.padRight = 3
           def pad_right var
             @o1.padRight = var
           end
         
           @o1.padTop = 2
           def pad_top var
             @o1.padTop = var
           end
         
           @o1.padBottom = 2
           def pad_bottom var
             @o1.padBottom = var
           end
         
           @o1.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o1.hSpacing = var
           end
         
           @o1.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o1.vSpacing = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXDockBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDockHandler
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dock_handler name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :tgt=>nil, :sel=>nil, :opts=>nil, :x=>nil, :y=>nil, :w=>nil, :h=>nil, :pl=>nil, :pr=>nil, :pt=>nil, :pb=>nil}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.tgt = :required
           def tgt var
             @o0.tgt = var
           end
         
           @o0.sel = :required
           def sel var
             @o0.sel = var
           end
         
           @o0.opts = :required
           def opts var
             @o0.opts = var
           end
         
           @o0.x = :required
           def x var
             @o0.x = var
           end
         
           @o0.y = :required
           def y var
             @o0.y = var
           end
         
           @o0.w = :required
           def w var
             @o0.w = var
           end
         
           @o0.h = :required
           def h var
             @o0.h = var
           end
         
           @o0.pl = :required
           def pl var
             @o0.pl = var
           end
         
           @o0.pr = :required
           def pr var
             @o0.pr = var
           end
         
           @o0.pt = :required
           def pt var
             @o0.pt = var
           end
         
           @o0.pb = :required
           def pb var
             @o0.pb = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDockHandler.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDockSite
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dock_site name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"0", :padBottom=>"0", :hSpacing=>"0", :vSpacing=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = 0
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = 0
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDockSite.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDockTitle
     include Enhancement
     attr_accessor :_o     
   end
   def fx_dock_title name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_NORMAL|JUSTIFY_CENTER_X|JUSTIFY_CENTER_Y", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"0", :padBottom=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_NORMAL|JUSTIFY_CENTER_X|JUSTIFY_CENTER_Y
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDockTitle.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDocument
     include Enhancement
     attr_accessor :_o     
   end
   def fx_document name = nil, &block
     
     
     Enhancement.stack << FXDocument.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDragCorner
     include Enhancement
     attr_accessor :_o     
   end
   def fx_drag_corner name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDragCorner.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDrawable
     include Enhancement
     attr_accessor :_o     
   end
   def fx_drawable name = nil, &block
     
     
     Enhancement.stack << FXDrawable.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXDriveBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_drive_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_SUNKEN|FRAME_THICK|LISTBOX_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_SUNKEN|FRAME_THICK|LISTBOX_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXDriveBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXExtentd
     include Enhancement
     attr_accessor :_o     
   end
   def fx_extentd name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:ext=>nil}
         
           @o0.ext = :required
           def ext var
             @o0.ext = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:lo=>nil, :hi=>nil}
         
           @o1.lo = :required
           def lo var
             @o1.lo = var
           end
         
           @o1.hi = :required
           def hi var
             @o1.hi = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:xlo=>nil, :xhi=>nil, :ylo=>nil, :yhi=>nil}
         
           @o2.xlo = :required
           def xlo var
             @o2.xlo = var
           end
         
           @o2.xhi = :required
           def xhi var
             @o2.xhi = var
           end
         
           @o2.ylo = :required
           def ylo var
             @o2.ylo = var
           end
         
           @o2.yhi = :required
           def yhi var
             @o2.yhi = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
     Enhancement.stack << FXExtentd.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXExtentf
     include Enhancement
     attr_accessor :_o     
   end
   def fx_extentf name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:ext=>nil}
         
           @o0.ext = :required
           def ext var
             @o0.ext = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:lo=>nil, :hi=>nil}
         
           @o1.lo = :required
           def lo var
             @o1.lo = var
           end
         
           @o1.hi = :required
           def hi var
             @o1.hi = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:xlo=>nil, :xhi=>nil, :ylo=>nil, :yhi=>nil}
         
           @o2.xlo = :required
           def xlo var
             @o2.xlo = var
           end
         
           @o2.xhi = :required
           def xhi var
             @o2.xhi = var
           end
         
           @o2.ylo = :required
           def ylo var
             @o2.ylo = var
           end
         
           @o2.yhi = :required
           def yhi var
             @o2.yhi = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
     Enhancement.stack << FXExtentf.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFileDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_file_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :name=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"500", :height=>"300"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.name = :required
           def name var
             @o0.name = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 500
           def width var
             @o0.width = var
           end
         
           @o0.height = 300
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFileDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFileAssoc
     include Enhancement
     attr_accessor :_o     
   end
   def fx_file_assoc name = nil, &block
     
     
     Enhancement.stack << FXFileAssoc.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFileDict
     include Enhancement
     attr_accessor :_o     
   end
   def fx_file_dict name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil, :db=>"nil"}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
           @o0.db = nil
           def db var
             @o0.db = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFileDict.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFileItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_file_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :bi=>"nil", :mi=>"nil", :ptr=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.bi = nil
           def bi var
             @o0.bi = var
           end
         
           @o0.mi = nil
           def mi var
             @o0.mi = var
           end
         
           @o0.ptr = nil
           def ptr var
             @o0.ptr = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFileItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFileList
     include Enhancement
     attr_accessor :_o     
   end
   def fx_file_list name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFileList.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFileSelector
     include Enhancement
     attr_accessor :_o     
   end
   def fx_file_selector name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFileSelector.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFileStream
     include Enhancement
     attr_accessor :_o     
   end
   def fx_file_stream name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:cont=>"nil"}
         
           @o0.cont = nil
           def cont var
             @o0.cont = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFileStream.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFoldingItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_folding_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :openIcon=>"nil", :closedIcon=>"nil", :data=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.openIcon = nil
           def open_icon var
             @o0.openIcon = var
           end
         
           @o0.closedIcon = nil
           def closed_icon var
             @o0.closedIcon = var
           end
         
           @o0.data = nil
           def data var
             @o0.data = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFoldingItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFoldingList
     include Enhancement
     attr_accessor :_o     
   end
   def fx_folding_list name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"TREELIST_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = TREELIST_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFoldingList.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFontDesc
     include Enhancement
     attr_accessor :_o     
   end
   def fx_font_desc name = nil, &block
     
     
     Enhancement.stack << FXFontDesc.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFont
     include Enhancement
     attr_accessor :_o     
   end
   def fx_font name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :fontDesc=>nil}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.fontDesc = :required
           def font_desc var
             @o0.fontDesc = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:a=>nil, :face=>nil, :size=>nil, :weight=>"FXFont::Normal", :slant=>"Font::Straight", :encoding=>"FONTENCODING_DEFAULT", :setWidth=>"FXFont::NonExpanded", :hints=>"0"}
         
           @o1.a = :required
           def a var
             @o1.a = var
           end
         
           @o1.face = :required
           def face var
             @o1.face = var
           end
         
           @o1.size = :required
           def size var
             @o1.size = var
           end
         
           @o1.weight = FXFont::Normal
           def weight var
             @o1.weight = var
           end
         
           @o1.slant = Font::Straight
           def slant var
             @o1.slant = var
           end
         
           @o1.encoding = FONTENCODING_DEFAULT
           def encoding var
             @o1.encoding = var
           end
         
           @o1.setWidth = FXFont::NonExpanded
           def set_width var
             @o1.setWidth = var
           end
         
           @o1.hints = 0
           def hints var
             @o1.hints = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:a=>nil, :string=>nil}
         
           @o2.a = :required
           def a var
             @o2.a = var
           end
         
           @o2.string = :required
           def string var
             @o2.string = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
     Enhancement.stack << FXFont.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFontDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_font_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :name=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"600", :height=>"380"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.name = :required
           def name var
             @o0.name = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 600
           def width var
             @o0.width = var
           end
         
           @o0.height = 380
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFontDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFontSelector
     include Enhancement
     attr_accessor :_o     
   end
   def fx_font_selector name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFontSelector.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXFrame
     include Enhancement
     attr_accessor :_o     
   end
   def fx_frame name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :opts=>"FRAME_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.opts = FRAME_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXFrame.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGIFCursor
     include Enhancement
     attr_accessor :_o     
   end
   def fxgif_cursor name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>nil, :hx=>"-1", :hy=>"-1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = :required
           def pix var
             @o0.pix = var
           end
         
           @o0.hx = -1
           def hx var
             @o0.hx = var
           end
         
           @o0.hy = -1
           def hy var
             @o0.hy = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXGIFCursor.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGIFIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxgif_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXGIFIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGIFImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxgif_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXGIFImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGLCanvas
     include Enhancement
     attr_accessor :_o     
   end
   def fxgl_canvas name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :vis=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.vis = :required
           def vis var
             @o0.vis = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:parent=>nil, :vis=>nil, :sharegroup=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o1.parent = :required
           def parent var
             @o1.parent = var
           end
         
           @o1.vis = :required
           def vis var
             @o1.vis = var
           end
         
           @o1.sharegroup = :required
           def sharegroup var
             @o1.sharegroup = var
           end
         
           @o1.target = nil
           def target var
             @o1.target = var
           end
         
           @o1.selector = 0
           def selector var
             @o1.selector = var
           end
         
           @o1.opts = 0
           def opts var
             @o1.opts = var
           end
         
           @o1.x = 0
           def x var
             @o1.x = var
           end
         
           @o1.y = 0
           def y var
             @o1.y = var
           end
         
           @o1.width = 0
           def width var
             @o1.width = var
           end
         
           @o1.height = 0
           def height var
             @o1.height = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXGLCanvas.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGLContext
     include Enhancement
     attr_accessor :_o     
   end
   def fxgl_context name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil, :visual=>nil, :other=>"nil"}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
           @o0.visual = :required
           def visual var
             @o0.visual = var
           end
         
           @o0.other = nil
           def other var
             @o0.other = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXGLContext.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGLObject
     include Enhancement
     attr_accessor :_o     
   end
   def fxgl_object name = nil, &block
     
     
     Enhancement.stack << FXGLObject.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGLShape
     include Enhancement
     attr_accessor :_o     
   end
   def fxgl_shape name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:x=>nil, :y=>nil, :z=>nil, :opts=>nil, :front=>"nil", :back=>"nil"}
         
           @o0.x = :required
           def x var
             @o0.x = var
           end
         
           @o0.y = :required
           def y var
             @o0.y = var
           end
         
           @o0.z = :required
           def z var
             @o0.z = var
           end
         
           @o0.opts = :required
           def opts var
             @o0.opts = var
           end
         
           @o0.front = nil
           def front var
             @o0.front = var
           end
         
           @o0.back = nil
           def back var
             @o0.back = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXGLShape.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXViewport
     include Enhancement
     attr_accessor :_o     
   end
   def fx_viewport name = nil, &block
     
     
     Enhancement.stack << FXViewport.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXLight
     include Enhancement
     attr_accessor :_o     
   end
   def fx_light name = nil, &block
     
     
     Enhancement.stack << FXLight.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMaterial
     include Enhancement
     attr_accessor :_o     
   end
   def fx_material name = nil, &block
     
     
     Enhancement.stack << FXMaterial.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGLViewer
     include Enhancement
     attr_accessor :_o     
   end
   def fxgl_viewer name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :vis=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.vis = :required
           def vis var
             @o0.vis = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:p=>nil, :vis=>nil, :sharegroup=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o1.p = :required
           def p var
             @o1.p = var
           end
         
           @o1.vis = :required
           def vis var
             @o1.vis = var
           end
         
           @o1.sharegroup = :required
           def sharegroup var
             @o1.sharegroup = var
           end
         
           @o1.target = nil
           def target var
             @o1.target = var
           end
         
           @o1.selector = 0
           def selector var
             @o1.selector = var
           end
         
           @o1.opts = 0
           def opts var
             @o1.opts = var
           end
         
           @o1.x = 0
           def x var
             @o1.x = var
           end
         
           @o1.y = 0
           def y var
             @o1.y = var
           end
         
           @o1.width = 0
           def width var
             @o1.width = var
           end
         
           @o1.height = 0
           def height var
             @o1.height = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXGLViewer.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGLVisual
     include Enhancement
     attr_accessor :_o     
   end
   def fxgl_visual name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil, :flags=>nil}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
           @o0.flags = :required
           def flags var
             @o0.flags = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXGLVisual.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGradient
     include Enhancement
     attr_accessor :_o     
   end
   def fx_gradient name = nil, &block
     
     
     Enhancement.stack << FXGradient.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGradientBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_gradient_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXGradientBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXGroupBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_group_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :opts=>"GROUPBOX_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.opts = GROUPBOX_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXGroupBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXHeaderItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_header_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :ic=>"nil", :s=>"0", :ptr=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.s = 0
           def s var
             @o0.s = var
           end
         
           @o0.ptr = nil
           def ptr var
             @o0.ptr = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXHeaderItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXHeader
     include Enhancement
     attr_accessor :_o     
   end
   def fx_header name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"HEADER_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = HEADER_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXHeader.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXHorizontalFrame
     include Enhancement
     attr_accessor :_o     
   end
   def fx_horizontal_frame name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXHorizontalFrame.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXICOIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxico_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXICOIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXICOImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxico_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXICOImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fx_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXIconDict
     include Enhancement
     attr_accessor :_o     
   end
   def fx_icon_dict name = nil, &block
     
     
     Enhancement.stack << FXIconDict.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXIconItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_icon_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :bigIcon=>"nil", :miniIcon=>"nil", :data=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.bigIcon = nil
           def big_icon var
             @o0.bigIcon = var
           end
         
           @o0.miniIcon = nil
           def mini_icon var
             @o0.miniIcon = var
           end
         
           @o0.data = nil
           def data var
             @o0.data = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXIconItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXIconList
     include Enhancement
     attr_accessor :_o     
   end
   def fx_icon_list name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"ICONLIST_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = ICONLIST_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXIconList.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXIconSource
     include Enhancement
     attr_accessor :_o     
   end
   def fx_icon_source name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXIconSource.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXId
     include Enhancement
     attr_accessor :_o     
   end
   def fx_id name = nil, &block
     
     
     Enhancement.stack << FXId.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXImage
     include Enhancement
     attr_accessor :_o     
   end
   def fx_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pixels=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pixels = nil
           def pixels var
             @o0.pixels = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXImageFrame
     include Enhancement
     attr_accessor :_o     
   end
   def fx_image_frame name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :img=>nil, :opts=>"FRAME_SUNKEN|FRAME_THICK", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"0", :padBottom=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.img = :required
           def img var
             @o0.img = var
           end
         
           @o0.opts = FRAME_SUNKEN|FRAME_THICK
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXImageFrame.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXImageView
     include Enhancement
     attr_accessor :_o     
   end
   def fx_image_view name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :img=>"nil", :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.img = nil
           def img var
             @o0.img = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXImageView.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXInputDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_input_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :caption=>nil, :label=>nil, :icon=>"nil", :opts=>"INPUTDIALOG_STRING", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.caption = :required
           def caption var
             @o0.caption = var
           end
         
           @o0.label = :required
           def label var
             @o0.label = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.opts = INPUTDIALOG_STRING
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXInputDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXJPGIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxjpg_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1", :quality=>"75"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
           @o0.quality = 75
           def quality var
             @o0.quality = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXJPGIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXJPGImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxjpg_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1", :quality=>"75"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
           @o0.quality = 75
           def quality var
             @o0.quality = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXJPGImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXKnob
     include Enhancement
     attr_accessor :_o     
   end
   def fx_knob name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"KNOB_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = KNOB_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXKnob.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXLabel
     include Enhancement
     attr_accessor :_o     
   end
   def fx_label name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :icon=>"nil", :opts=>"LABEL_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.opts = LABEL_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXLabel.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXListItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_list_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :icon=>"nil", :data=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.data = nil
           def data var
             @o0.data = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXListItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXList
     include Enhancement
     attr_accessor :_o     
   end
   def fx_list name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"LIST_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = LIST_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXList.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXListBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_list_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_SUNKEN|FRAME_THICK|LISTBOX_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_SUNKEN|FRAME_THICK|LISTBOX_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXListBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMDIDeleteButton
     include Enhancement
     attr_accessor :_o     
   end
   def fxmdi_delete_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_RAISED", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_RAISED
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMDIDeleteButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMDIRestoreButton
     include Enhancement
     attr_accessor :_o     
   end
   def fxmdi_restore_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_RAISED", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_RAISED
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMDIRestoreButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMDIMaximizeButton
     include Enhancement
     attr_accessor :_o     
   end
   def fxmdi_maximize_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_RAISED", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_RAISED
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMDIMaximizeButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMDIMinimizeButton
     include Enhancement
     attr_accessor :_o     
   end
   def fxmdi_minimize_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_RAISED", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_RAISED
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMDIMinimizeButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMDIWindowButton
     include Enhancement
     attr_accessor :_o     
   end
   def fxmdi_window_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :pup=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.pup = :required
           def pup var
             @o0.pup = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMDIWindowButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMDIMenu
     include Enhancement
     attr_accessor :_o     
   end
   def fxmdi_menu name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :target=>"nil"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMDIMenu.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMDIChild
     include Enhancement
     attr_accessor :_o     
   end
   def fxmdi_child name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :name=>nil, :ic=>"nil", :pup=>"nil", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.name = :required
           def name var
             @o0.name = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.pup = nil
           def pup var
             @o0.pup = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMDIChild.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMDIClient
     include Enhancement
     attr_accessor :_o     
   end
   def fxmdi_client name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMDIClient.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMainWindow
     include Enhancement
     attr_accessor :_o     
   end
   def fx_main_window name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil, :title=>nil, :icon=>"nil", :miniIcon=>"nil", :opts=>"DECOR_ALL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"0", :padBottom=>"0", :hSpacing=>"4", :vSpacing=>"4"}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
           @o0.title = :required
           def title var
             @o0.title = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.miniIcon = nil
           def mini_icon var
             @o0.miniIcon = var
           end
         
           @o0.opts = DECOR_ALL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = 4
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = 4
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMainWindow.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMatrix
     include Enhancement
     attr_accessor :_o     
   end
   def fx_matrix name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :n=>"1", :opts=>"MATRIX_BY_ROWS", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.n = 1
           def n var
             @o0.n = var
           end
         
           @o0.opts = MATRIX_BY_ROWS
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMatrix.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMemoryBuffer
     include Enhancement
     attr_accessor :_o     
   end
   def fx_memory_buffer name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:data=>nil}
         
           @o0.data = :required
           def data var
             @o0.data = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMemoryBuffer.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMemoryStream
     include Enhancement
     attr_accessor :_o     
   end
   def fx_memory_stream name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:cont=>"nil"}
         
           @o0.cont = nil
           def cont var
             @o0.cont = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMemoryStream.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :q=>nil, :opts=>"LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"3", :padRight=>"3", :padTop=>"2", :padBottom=>"2", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.q = :required
           def q var
             @o0.q = var
           end
         
           @o0.opts = LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 3
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 3
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 2
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 2
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:p=>nil, :opts=>nil, :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"3", :padRight=>"3", :padTop=>"2", :padBottom=>"2", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o1.p = :required
           def p var
             @o1.p = var
           end
         
           @o1.opts = :required
           def opts var
             @o1.opts = var
           end
         
           @o1.x = 0
           def x var
             @o1.x = var
           end
         
           @o1.y = 0
           def y var
             @o1.y = var
           end
         
           @o1.width = 0
           def width var
             @o1.width = var
           end
         
           @o1.height = 0
           def height var
             @o1.height = var
           end
         
           @o1.padLeft = 3
           def pad_left var
             @o1.padLeft = var
           end
         
           @o1.padRight = 3
           def pad_right var
             @o1.padRight = var
           end
         
           @o1.padTop = 2
           def pad_top var
             @o1.padTop = var
           end
         
           @o1.padBottom = 2
           def pad_bottom var
             @o1.padBottom = var
           end
         
           @o1.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o1.hSpacing = var
           end
         
           @o1.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o1.vSpacing = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXMenuBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuButton
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :icon=>"nil", :popupMenu=>"nil", :opts=>"JUSTIFY_NORMAL|ICON_BEFORE_TEXT|MENUBUTTON_DOWN", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.popupMenu = nil
           def popup_menu var
             @o0.popupMenu = var
           end
         
           @o0.opts = JUSTIFY_NORMAL|ICON_BEFORE_TEXT|MENUBUTTON_DOWN
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuCaption
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_caption name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :icon=>"nil", :opts=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuCaption.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuCascade
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_cascade name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :icon=>"nil", :popupMenu=>"nil", :opts=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.popupMenu = nil
           def popup_menu var
             @o0.popupMenu = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuCascade.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuCheck
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_check name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>nil, :target=>"nil", :selector=>"0", :opts=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuCheck.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuCommand
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_command name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>nil, :ic=>"nil", :target=>"nil", :selector=>"0", :opts=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuCommand.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuPane
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_pane name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :opts=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuPane.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuRadio
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_radio name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>nil, :target=>"nil", :selector=>"0", :opts=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuRadio.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuSeparator
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_separator name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :opts=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuSeparator.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMenuTitle
     include Enhancement
     attr_accessor :_o     
   end
   def fx_menu_title name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :icon=>"nil", :popupMenu=>"nil", :opts=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.popupMenu = nil
           def popup_menu var
             @o0.popupMenu = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMenuTitle.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXMessageBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_message_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :caption=>nil, :text=>nil, :ic=>"nil", :opts=>"0", :x=>"0", :y=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.caption = :required
           def caption var
             @o0.caption = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXMessageBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXObject
     include Enhancement
     attr_accessor :_o     
   end
   def fx_object name = nil, &block
     
     
     Enhancement.stack << FXObject.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXOption
     include Enhancement
     attr_accessor :_o     
   end
   def fx_option name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>nil, :ic=>"nil", :target=>"nil", :selector=>"0", :opts=>"JUSTIFY_NORMAL|ICON_BEFORE_TEXT", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = JUSTIFY_NORMAL|ICON_BEFORE_TEXT
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXOption.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXOptionMenu
     include Enhancement
     attr_accessor :_o     
   end
   def fx_option_menu name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :pup=>"nil", :opts=>"JUSTIFY_NORMAL|ICON_BEFORE_TEXT", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.pup = nil
           def pup var
             @o0.pup = var
           end
         
           @o0.opts = JUSTIFY_NORMAL|ICON_BEFORE_TEXT
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXOptionMenu.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPCXIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxpcx_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPCXIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPCXImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxpcx_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPCXImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPNGIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxpng_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPNGIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPNGImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxpng_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPNGImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPPMIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxppm_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPPMIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPPMImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxppm_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPPMImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPacker
     include Enhancement
     attr_accessor :_o     
   end
   def fx_packer name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPacker.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPicker
     include Enhancement
     attr_accessor :_o     
   end
   def fx_picker name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>nil, :ic=>"nil", :target=>"nil", :selector=>"0", :opts=>"BUTTON_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = BUTTON_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPicker.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPopup
     include Enhancement
     attr_accessor :_o     
   end
   def fx_popup name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :opts=>"POPUP_VERTICAL|FRAME_RAISED|FRAME_THICK", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.opts = POPUP_VERTICAL|FRAME_RAISED|FRAME_THICK
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPopup.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXPrintDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_print_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :name=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.name = :required
           def name var
             @o0.name = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXPrintDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXProgressBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_progress_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"PROGRESSBAR_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = PROGRESSBAR_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXProgressBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXProgressDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_progress_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :caption=>nil, :label=>nil, :opts=>"PROGRESSDIALOG_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.caption = :required
           def caption var
             @o0.caption = var
           end
         
           @o0.label = :required
           def label var
             @o0.label = var
           end
         
           @o0.opts = PROGRESSDIALOG_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXProgressDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXQuatd
     include Enhancement
     attr_accessor :_o     
   end
   def fx_quatd name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:axis=>nil, :phi=>"0.0"}
         
           @o0.axis = :required
           def axis var
             @o0.axis = var
           end
         
           @o0.phi = 0.0
           def phi var
             @o0.phi = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:x=>nil, :y=>nil, :z=>nil, :w=>nil}
         
           @o1.x = :required
           def x var
             @o1.x = var
           end
         
           @o1.y = :required
           def y var
             @o1.y = var
           end
         
           @o1.z = :required
           def z var
             @o1.z = var
           end
         
           @o1.w = :required
           def w var
             @o1.w = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:floats=>nil}
         
           @o2.floats = :required
           def floats var
             @o2.floats = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
         @o3 = OpenStruct.new
         #{:roll=>nil, :pitch=>nil, :yaw=>nil}
         
           @o3.roll = :required
           def roll var
             @o3.roll = var
           end
         
           @o3.pitch = :required
           def pitch var
             @o3.pitch = var
           end
         
           @o3.yaw = :required
           def yaw var
             @o3.yaw = var
           end
         
         def instance a=nil, &block
            @o3.instance_name = a
            @o3.instance_block = block
         end
     
         @o4 = OpenStruct.new
         #{:ex=>nil, :ey=>nil, :ez=>nil}
         
           @o4.ex = :required
           def ex var
             @o4.ex = var
           end
         
           @o4.ey = :required
           def ey var
             @o4.ey = var
           end
         
           @o4.ez = :required
           def ez var
             @o4.ez = var
           end
         
         def instance a=nil, &block
            @o4.instance_name = a
            @o4.instance_block = block
         end
     
     Enhancement.stack << FXQuatd.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXQuatf
     include Enhancement
     attr_accessor :_o     
   end
   def fx_quatf name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:axis=>nil, :phi=>"0.0"}
         
           @o0.axis = :required
           def axis var
             @o0.axis = var
           end
         
           @o0.phi = 0.0
           def phi var
             @o0.phi = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:roll=>nil, :pitch=>nil, :yaw=>nil}
         
           @o1.roll = :required
           def roll var
             @o1.roll = var
           end
         
           @o1.pitch = :required
           def pitch var
             @o1.pitch = var
           end
         
           @o1.yaw = :required
           def yaw var
             @o1.yaw = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:ex=>nil, :ey=>nil, :ez=>nil}
         
           @o2.ex = :required
           def ex var
             @o2.ex = var
           end
         
           @o2.ey = :required
           def ey var
             @o2.ey = var
           end
         
           @o2.ez = :required
           def ez var
             @o2.ez = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
         @o3 = OpenStruct.new
         #{:mat=>nil}
         
           @o3.mat = :required
           def mat var
             @o3.mat = var
           end
         
         def instance a=nil, &block
            @o3.instance_name = a
            @o3.instance_block = block
         end
     
         @o4 = OpenStruct.new
         #{:x=>nil, :y=>nil, :z=>nil, :w=>nil}
         
           @o4.x = :required
           def x var
             @o4.x = var
           end
         
           @o4.y = :required
           def y var
             @o4.y = var
           end
         
           @o4.z = :required
           def z var
             @o4.z = var
           end
         
           @o4.w = :required
           def w var
             @o4.w = var
           end
         
         def instance a=nil, &block
            @o4.instance_name = a
            @o4.instance_block = block
         end
     
     Enhancement.stack << FXQuatf.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRGBIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxrgb_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRGBIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRGBImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxrgb_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRGBImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRadioButton
     include Enhancement
     attr_accessor :_o     
   end
   def fx_radio_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :text=>nil, :target=>"nil", :selector=>"0", :opts=>"RADIOBUTTON_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = RADIOBUTTON_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRadioButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRanged
     include Enhancement
     attr_accessor :_o     
   end
   def fx_ranged name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xlo=>"0.0", :xhi=>"0.0", :ylo=>"0.0", :yhi=>"0.0", :zlo=>"0.0", :zhi=>"0.0"}
         
           @o0.xlo = 0.0
           def xlo var
             @o0.xlo = var
           end
         
           @o0.xhi = 0.0
           def xhi var
             @o0.xhi = var
           end
         
           @o0.ylo = 0.0
           def ylo var
             @o0.ylo = var
           end
         
           @o0.yhi = 0.0
           def yhi var
             @o0.yhi = var
           end
         
           @o0.zlo = 0.0
           def zlo var
             @o0.zlo = var
           end
         
           @o0.zhi = 0.0
           def zhi var
             @o0.zhi = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:bounds=>nil}
         
           @o1.bounds = :required
           def bounds var
             @o1.bounds = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:sphere=>nil}
         
           @o2.sphere = :required
           def sphere var
             @o2.sphere = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
     Enhancement.stack << FXRanged.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRangef
     include Enhancement
     attr_accessor :_o     
   end
   def fx_rangef name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xlo=>"0.0", :xhi=>"0.0", :ylo=>"0.0", :yhi=>"0.0", :zlo=>"0.0", :zhi=>"0.0"}
         
           @o0.xlo = 0.0
           def xlo var
             @o0.xlo = var
           end
         
           @o0.xhi = 0.0
           def xhi var
             @o0.xhi = var
           end
         
           @o0.ylo = 0.0
           def ylo var
             @o0.ylo = var
           end
         
           @o0.yhi = 0.0
           def yhi var
             @o0.yhi = var
           end
         
           @o0.zlo = 0.0
           def zlo var
             @o0.zlo = var
           end
         
           @o0.zhi = 0.0
           def zhi var
             @o0.zhi = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:bounds=>nil}
         
           @o1.bounds = :required
           def bounds var
             @o1.bounds = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:sphere=>nil}
         
           @o2.sphere = :required
           def sphere var
             @o2.sphere = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
     Enhancement.stack << FXRangef.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRealSlider
     include Enhancement
     attr_accessor :_o     
   end
   def fx_real_slider name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"REALSLIDER_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"0", :padBottom=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = REALSLIDER_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRealSlider.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRealSpinner
     include Enhancement
     attr_accessor :_o     
   end
   def fx_real_spinner name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :cols=>nil, :target=>"nil", :selector=>"0", :opts=>"REALSPIN_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.cols = :required
           def cols var
             @o0.cols = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = REALSPIN_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRealSpinner.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRecentFiles
     include Enhancement
     attr_accessor :_o     
   end
   def fx_recent_files name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:a=>nil, :gp=>nil, :target=>"nil", :selector=>"0"}
         
           @o1.a = :required
           def a var
             @o1.a = var
           end
         
           @o1.gp = :required
           def gp var
             @o1.gp = var
           end
         
           @o1.target = nil
           def target var
             @o1.target = var
           end
         
           @o1.selector = 0
           def selector var
             @o1.selector = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXRecentFiles.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRectangle
     include Enhancement
     attr_accessor :_o     
   end
   def fx_rectangle name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xx=>nil, :yy=>nil, :ww=>nil, :hh=>nil}
         
           @o0.xx = :required
           def xx var
             @o0.xx = var
           end
         
           @o0.yy = :required
           def yy var
             @o0.yy = var
           end
         
           @o0.ww = :required
           def ww var
             @o0.ww = var
           end
         
           @o0.hh = :required
           def hh var
             @o0.hh = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:p=>nil, :s=>nil}
         
           @o1.p = :required
           def p var
             @o1.p = var
           end
         
           @o1.s = :required
           def s var
             @o1.s = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:topleft=>nil, :bottomright=>nil}
         
           @o2.topleft = :required
           def topleft var
             @o2.topleft = var
           end
         
           @o2.bottomright = :required
           def bottomright var
             @o2.bottomright = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
     Enhancement.stack << FXRectangle.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRegion
     include Enhancement
     attr_accessor :_o     
   end
   def fx_region name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:r=>nil}
         
           @o0.r = :required
           def r var
             @o0.r = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:rect=>nil}
         
           @o1.rect = :required
           def rect var
             @o1.rect = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:x=>nil, :y=>nil, :w=>nil, :h=>nil}
         
           @o2.x = :required
           def x var
             @o2.x = var
           end
         
           @o2.y = :required
           def y var
             @o2.y = var
           end
         
           @o2.w = :required
           def w var
             @o2.w = var
           end
         
           @o2.h = :required
           def h var
             @o2.h = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
         @o3 = OpenStruct.new
         #{:points=>nil, :winding=>"false"}
         
           @o3.points = :required
           def points var
             @o3.points = var
           end
         
           @o3.winding = false
           def winding var
             @o3.winding = var
           end
         
         def instance a=nil, &block
            @o3.instance_name = a
            @o3.instance_block = block
         end
     
     Enhancement.stack << FXRegion.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRegistry
     include Enhancement
     attr_accessor :_o     
   end
   def fx_registry name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:appKey=>"\"\"", :vendorKey=>"\"\""}
         
           @o0.appKey = ""
           def app_key var
             @o0.appKey = var
           end
         
           @o0.vendorKey = ""
           def vendor_key var
             @o0.vendorKey = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRegistry.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXReplaceDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_replace_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :caption=>nil, :ic=>"nil", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.caption = :required
           def caption var
             @o0.caption = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXReplaceDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRootWindow
     include Enhancement
     attr_accessor :_o     
   end
   def fx_root_window name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :vis=>nil}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.vis = :required
           def vis var
             @o0.vis = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRootWindow.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRuler
     include Enhancement
     attr_accessor :_o     
   end
   def fx_ruler name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"RULER_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = RULER_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRuler.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXRulerView
     include Enhancement
     attr_accessor :_o     
   end
   def fx_ruler_view name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXRulerView.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class NotifyHeader
     include Enhancement
     attr_accessor :_o     
   end
   def notify_header name = nil, &block
     
     
     Enhancement.stack << NotifyHeader.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class SCNotification
     include Enhancement
     attr_accessor :_o     
   end
   def sc_notification name = nil, &block
     
     
     Enhancement.stack << SCNotification.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class TextRange
     include Enhancement
     attr_accessor :_o     
   end
   def text_range name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:start=>nil, :last=>nil, :size=>nil}
         
           @o0.start = :required
           def start var
             @o0.start = var
           end
         
           @o0.last = :required
           def last var
             @o0.last = var
           end
         
           @o0.size = :required
           def size var
             @o0.size = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << TextRange.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXScintilla
     include Enhancement
     attr_accessor :_o     
   end
   def fx_scintilla name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXScintilla.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXScrollArea
     include Enhancement
     attr_accessor :_o     
   end
   def fx_scroll_area name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:parent=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.parent = :required
           def parent var
             @o0.parent = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXScrollArea.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXScrollBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_scroll_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"SCROLLBAR_VERTICAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = SCROLLBAR_VERTICAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXScrollBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXScrollCorner
     include Enhancement
     attr_accessor :_o     
   end
   def fx_scroll_corner name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXScrollCorner.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXScrollPane
     include Enhancement
     attr_accessor :_o     
   end
   def fx_scroll_pane name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :nvis=>nil, :opts=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.nvis = :required
           def nvis var
             @o0.nvis = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXScrollPane.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXScrollWindow
     include Enhancement
     attr_accessor :_o     
   end
   def fx_scroll_window name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXScrollWindow.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSearchDialog
     include Enhancement
     attr_accessor :_o     
   end
   def fx_search_dialog name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :caption=>nil, :ic=>"nil", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.caption = :required
           def caption var
             @o0.caption = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXSearchDialog.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSeparator
     include Enhancement
     attr_accessor :_o     
   end
   def fx_separator name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"SEPARATOR_GROOVE|LAYOUT_FILL_X", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"0", :padBottom=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = SEPARATOR_GROOVE|LAYOUT_FILL_X
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXSeparator.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXHorizontalSeparator
     include Enhancement
     attr_accessor :_o     
   end
   def fx_horizontal_separator name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"SEPARATOR_GROOVE|LAYOUT_FILL_X", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"1", :padRight=>"1", :padTop=>"0", :padBottom=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = SEPARATOR_GROOVE|LAYOUT_FILL_X
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 1
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 1
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXHorizontalSeparator.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVerticalSeparator
     include Enhancement
     attr_accessor :_o     
   end
   def fx_vertical_separator name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"SEPARATOR_GROOVE|LAYOUT_FILL_Y", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"1", :padBottom=>"1"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = SEPARATOR_GROOVE|LAYOUT_FILL_Y
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 1
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 1
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXVerticalSeparator.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSettings
     include Enhancement
     attr_accessor :_o     
   end
   def fx_settings name = nil, &block
     
     
     Enhancement.stack << FXSettings.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXShell
     include Enhancement
     attr_accessor :_o     
   end
   def fx_shell name = nil, &block
     
     
     Enhancement.stack << FXShell.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXShutterItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_shutter_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>"\"\"", :icon=>"nil", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = ""
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXShutterItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXShutter
     include Enhancement
     attr_accessor :_o     
   end
   def fx_shutter name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXShutter.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSize
     include Enhancement
     attr_accessor :_o     
   end
   def fx_size name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:s=>nil}
         
           @o0.s = :required
           def s var
             @o0.s = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:ww=>nil, :hh=>nil}
         
           @o1.ww = :required
           def ww var
             @o1.ww = var
           end
         
           @o1.hh = :required
           def hh var
             @o1.hh = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXSize.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSlider
     include Enhancement
     attr_accessor :_o     
   end
   def fx_slider name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"SLIDER_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"0", :padRight=>"0", :padTop=>"0", :padBottom=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = SLIDER_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 0
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 0
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 0
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 0
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXSlider.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSphered
     include Enhancement
     attr_accessor :_o     
   end
   def fx_sphered name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:otherSphere=>nil}
         
           @o0.otherSphere = :required
           def other_sphere var
             @o0.otherSphere = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:cen=>nil, :rad=>"0.0"}
         
           @o1.cen = :required
           def cen var
             @o1.cen = var
           end
         
           @o1.rad = 0.0
           def rad var
             @o1.rad = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:x=>nil, :y=>nil, :z=>nil, :rad=>"0.0"}
         
           @o2.x = :required
           def x var
             @o2.x = var
           end
         
           @o2.y = :required
           def y var
             @o2.y = var
           end
         
           @o2.z = :required
           def z var
             @o2.z = var
           end
         
           @o2.rad = 0.0
           def rad var
             @o2.rad = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
         @o3 = OpenStruct.new
         #{:bounds=>nil}
         
           @o3.bounds = :required
           def bounds var
             @o3.bounds = var
           end
         
         def instance a=nil, &block
            @o3.instance_name = a
            @o3.instance_block = block
         end
     
     Enhancement.stack << FXSphered.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSpheref
     include Enhancement
     attr_accessor :_o     
   end
   def fx_spheref name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:otherSphere=>nil}
         
           @o0.otherSphere = :required
           def other_sphere var
             @o0.otherSphere = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:cen=>nil, :rad=>"0.0"}
         
           @o1.cen = :required
           def cen var
             @o1.cen = var
           end
         
           @o1.rad = 0.0
           def rad var
             @o1.rad = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:x=>nil, :y=>nil, :z=>nil, :rad=>"0.0"}
         
           @o2.x = :required
           def x var
             @o2.x = var
           end
         
           @o2.y = :required
           def y var
             @o2.y = var
           end
         
           @o2.z = :required
           def z var
             @o2.z = var
           end
         
           @o2.rad = 0.0
           def rad var
             @o2.rad = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
         @o3 = OpenStruct.new
         #{:bounds=>nil}
         
           @o3.bounds = :required
           def bounds var
             @o3.bounds = var
           end
         
         def instance a=nil, &block
            @o3.instance_name = a
            @o3.instance_block = block
         end
     
     Enhancement.stack << FXSpheref.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSpinner
     include Enhancement
     attr_accessor :_o     
   end
   def fx_spinner name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :cols=>nil, :target=>"nil", :selector=>"0", :opts=>"SPIN_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.cols = :required
           def cols var
             @o0.cols = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = SPIN_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXSpinner.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSplashWindow
     include Enhancement
     attr_accessor :_o     
   end
   def fx_splash_window name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :icon=>nil, :opts=>"SPLASH_SIMPLE", :ms=>"5000"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.icon = :required
           def icon var
             @o0.icon = var
           end
         
           @o0.opts = SPLASH_SIMPLE
           def opts var
             @o0.opts = var
           end
         
           @o0.ms = 5000
           def ms var
             @o0.ms = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXSplashWindow.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSplitter
     include Enhancement
     attr_accessor :_o     
   end
   def fx_splitter name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"SPLITTER_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = SPLITTER_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:p=>nil, :tgt=>nil, :sel=>nil, :opts=>"SPLITTER_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o1.p = :required
           def p var
             @o1.p = var
           end
         
           @o1.tgt = :required
           def tgt var
             @o1.tgt = var
           end
         
           @o1.sel = :required
           def sel var
             @o1.sel = var
           end
         
           @o1.opts = SPLITTER_NORMAL
           def opts var
             @o1.opts = var
           end
         
           @o1.x = 0
           def x var
             @o1.x = var
           end
         
           @o1.y = 0
           def y var
             @o1.y = var
           end
         
           @o1.width = 0
           def width var
             @o1.width = var
           end
         
           @o1.height = 0
           def height var
             @o1.height = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXSplitter.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSpring
     include Enhancement
     attr_accessor :_o     
   end
   def fx_spring name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :relw=>"0", :relh=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.relw = 0
           def relw var
             @o0.relw = var
           end
         
           @o0.relh = 0
           def relh var
             @o0.relh = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXSpring.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXStatusBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_status_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"3", :padRight=>"3", :padTop=>"2", :padBottom=>"2", :hSpacing=>"4", :vSpacing=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 3
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 3
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 2
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 2
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = 4
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = 0
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXStatusBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXStatusLine
     include Enhancement
     attr_accessor :_o     
   end
   def fx_status_line name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXStatusLine.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXStream
     include Enhancement
     attr_accessor :_o     
   end
   def fx_stream name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:cont=>"nil"}
         
           @o0.cont = nil
           def cont var
             @o0.cont = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXStream.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXStringDict
     include Enhancement
     attr_accessor :_o     
   end
   def fx_string_dict name = nil, &block
     
     
     Enhancement.stack << FXStringDict.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXSwitcher
     include Enhancement
     attr_accessor :_o     
   end
   def fx_switcher name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXSwitcher.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTGAIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxtga_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTGAIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTGAImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxtga_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTGAImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTIFIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxtif_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTIFIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTIFImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxtif_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTIFImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTabBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tab_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"TABBOOK_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = TABBOOK_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTabBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTabBook
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tab_book name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"TABBOOK_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = TABBOOK_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTabBook.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTabItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tab_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text=>nil, :ic=>"nil", :opts=>"TAB_TOP_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.ic = nil
           def ic var
             @o0.ic = var
           end
         
           @o0.opts = TAB_TOP_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTabItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTablePos
     include Enhancement
     attr_accessor :_o     
   end
   def fx_table_pos name = nil, &block
     
     
     Enhancement.stack << FXTablePos.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTableRange
     include Enhancement
     attr_accessor :_o     
   end
   def fx_table_range name = nil, &block
     
     
     Enhancement.stack << FXTableRange.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTableItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_table_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :icon=>"nil", :data=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.icon = nil
           def icon var
             @o0.icon = var
           end
         
           @o0.data = nil
           def data var
             @o0.data = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTableItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTable
     include Enhancement
     attr_accessor :_o     
   end
   def fx_table name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_MARGIN", :padRight=>"DEFAULT_MARGIN", :padTop=>"DEFAULT_MARGIN", :padBottom=>"DEFAULT_MARGIN"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_MARGIN
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_MARGIN
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_MARGIN
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_MARGIN
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTable.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXHiliteStyle
     include Enhancement
     attr_accessor :_o     
   end
   def fx_hilite_style name = nil, &block
     
     
     Enhancement.stack << FXHiliteStyle.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTextChange
     include Enhancement
     attr_accessor :_o     
   end
   def fx_text_change name = nil, &block
     
     
     Enhancement.stack << FXTextChange.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXText
     include Enhancement
     attr_accessor :_o     
   end
   def fx_text name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"3", :padRight=>"3", :padTop=>"2", :padBottom=>"2"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 3
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 3
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 2
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 2
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXText.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTextField
     include Enhancement
     attr_accessor :_o     
   end
   def fx_text_field name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :ncols=>nil, :target=>"nil", :selector=>"0", :opts=>"TEXTFIELD_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.ncols = :required
           def ncols var
             @o0.ncols = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = TEXTFIELD_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTextField.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXToggleButton
     include Enhancement
     attr_accessor :_o     
   end
   def fx_toggle_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text1=>nil, :text2=>nil, :icon1=>"nil", :icon2=>"nil", :target=>"nil", :selector=>"0", :opts=>"TOGGLEBUTTON_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text1 = :required
           def text1 var
             @o0.text1 = var
           end
         
           @o0.text2 = :required
           def text2 var
             @o0.text2 = var
           end
         
           @o0.icon1 = nil
           def icon1 var
             @o0.icon1 = var
           end
         
           @o0.icon2 = nil
           def icon2 var
             @o0.icon2 = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = TOGGLEBUTTON_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXToggleButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXToolBar
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tool_bar name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :q=>nil, :opts=>"LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"3", :padRight=>"3", :padTop=>"2", :padBottom=>"2", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.q = :required
           def q var
             @o0.q = var
           end
         
           @o0.opts = LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 3
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 3
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 2
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 2
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:p=>nil, :opts=>"LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"3", :padRight=>"3", :padTop=>"2", :padBottom=>"2", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o1.p = :required
           def p var
             @o1.p = var
           end
         
           @o1.opts = LAYOUT_TOP|LAYOUT_LEFT|LAYOUT_FILL_X
           def opts var
             @o1.opts = var
           end
         
           @o1.x = 0
           def x var
             @o1.x = var
           end
         
           @o1.y = 0
           def y var
             @o1.y = var
           end
         
           @o1.width = 0
           def width var
             @o1.width = var
           end
         
           @o1.height = 0
           def height var
             @o1.height = var
           end
         
           @o1.padLeft = 3
           def pad_left var
             @o1.padLeft = var
           end
         
           @o1.padRight = 3
           def pad_right var
             @o1.padRight = var
           end
         
           @o1.padTop = 2
           def pad_top var
             @o1.padTop = var
           end
         
           @o1.padBottom = 2
           def pad_bottom var
             @o1.padBottom = var
           end
         
           @o1.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o1.hSpacing = var
           end
         
           @o1.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o1.vSpacing = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXToolBar.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXToolBarGrip
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tool_bar_grip name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"TOOLBARGRIP_SINGLE", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = TOOLBARGRIP_SINGLE
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXToolBarGrip.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXToolBarShell
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tool_bar_shell name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :opts=>"FRAME_RAISED|FRAME_THICK", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :hSpacing=>"4", :vSpacing=>"4"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.opts = FRAME_RAISED|FRAME_THICK
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.hSpacing = 4
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = 4
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXToolBarShell.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXToolBarTab
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tool_bar_tab name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_RAISED", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_RAISED
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXToolBarTab.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXToolTip
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tool_tip name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:app=>nil, :opts=>"TOOLTIP_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.app = :required
           def app var
             @o0.app = var
           end
         
           @o0.opts = TOOLTIP_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXToolTip.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTopWindow
     include Enhancement
     attr_accessor :_o     
   end
   def fx_top_window name = nil, &block
     
     
     Enhancement.stack << FXTopWindow.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTranslator
     include Enhancement
     attr_accessor :_o     
   end
   def fx_translator name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTranslator.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTreeItem
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tree_item name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:text=>nil, :openIcon=>"nil", :closedIcon=>"nil", :data=>"nil"}
         
           @o0.text = :required
           def text var
             @o0.text = var
           end
         
           @o0.openIcon = nil
           def open_icon var
             @o0.openIcon = var
           end
         
           @o0.closedIcon = nil
           def closed_icon var
             @o0.closedIcon = var
           end
         
           @o0.data = nil
           def data var
             @o0.data = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTreeItem.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTreeList
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tree_list name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"TREELIST_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = TREELIST_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTreeList.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTreeListBox
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tree_list_box name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :target=>"nil", :selector=>"0", :opts=>"FRAME_SUNKEN|FRAME_THICK|TREELISTBOX_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = FRAME_SUNKEN|FRAME_THICK|TREELISTBOX_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTreeListBox.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXTriStateButton
     include Enhancement
     attr_accessor :_o     
   end
   def fx_tri_state_button name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :text1=>nil, :text2=>nil, :text3=>nil, :icon1=>"nil", :icon2=>"nil", :icon3=>"nil", :target=>"nil", :selector=>"0", :opts=>"TOGGLEBUTTON_NORMAL", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_PAD", :padRight=>"DEFAULT_PAD", :padTop=>"DEFAULT_PAD", :padBottom=>"DEFAULT_PAD"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.text1 = :required
           def text1 var
             @o0.text1 = var
           end
         
           @o0.text2 = :required
           def text2 var
             @o0.text2 = var
           end
         
           @o0.text3 = :required
           def text3 var
             @o0.text3 = var
           end
         
           @o0.icon1 = nil
           def icon1 var
             @o0.icon1 = var
           end
         
           @o0.icon2 = nil
           def icon2 var
             @o0.icon2 = var
           end
         
           @o0.icon3 = nil
           def icon3 var
             @o0.icon3 = var
           end
         
           @o0.target = nil
           def target var
             @o0.target = var
           end
         
           @o0.selector = 0
           def selector var
             @o0.selector = var
           end
         
           @o0.opts = TOGGLEBUTTON_NORMAL
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_PAD
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_PAD
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_PAD
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_PAD
           def pad_bottom var
             @o0.padBottom = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXTriStateButton.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVec2d
     include Enhancement
     attr_accessor :_o     
   end
   def fx_vec2d name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xx=>"0.0", :yy=>"0.0"}
         
           @o0.xx = 0.0
           def xx var
             @o0.xx = var
           end
         
           @o0.yy = 0.0
           def yy var
             @o0.yy = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXVec2d.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVec2f
     include Enhancement
     attr_accessor :_o     
   end
   def fx_vec2f name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xx=>"0.0", :yy=>"0.0"}
         
           @o0.xx = 0.0
           def xx var
             @o0.xx = var
           end
         
           @o0.yy = 0.0
           def yy var
             @o0.yy = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXVec2f.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVec3d
     include Enhancement
     attr_accessor :_o     
   end
   def fx_vec3d name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xx=>nil, :yy=>nil, :zz=>"1.0"}
         
           @o0.xx = :required
           def xx var
             @o0.xx = var
           end
         
           @o0.yy = :required
           def yy var
             @o0.yy = var
           end
         
           @o0.zz = 1.0
           def zz var
             @o0.zz = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXVec3d.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVec3f
     include Enhancement
     attr_accessor :_o     
   end
   def fx_vec3f name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xx=>nil, :yy=>nil, :zz=>"1.0"}
         
           @o0.xx = :required
           def xx var
             @o0.xx = var
           end
         
           @o0.yy = :required
           def yy var
             @o0.yy = var
           end
         
           @o0.zz = 1.0
           def zz var
             @o0.zz = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXVec3f.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVec4d
     include Enhancement
     attr_accessor :_o     
   end
   def fx_vec4d name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xx=>nil, :yy=>nil, :zz=>nil, :ww=>"1.0"}
         
           @o0.xx = :required
           def xx var
             @o0.xx = var
           end
         
           @o0.yy = :required
           def yy var
             @o0.yy = var
           end
         
           @o0.zz = :required
           def zz var
             @o0.zz = var
           end
         
           @o0.ww = 1.0
           def ww var
             @o0.ww = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:vec3d=>nil, :ww=>"1.0"}
         
           @o1.vec3d = :required
           def vec3d var
             @o1.vec3d = var
           end
         
           @o1.ww = 1.0
           def ww var
             @o1.ww = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXVec4d.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVec4f
     include Enhancement
     attr_accessor :_o     
   end
   def fx_vec4f name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:xx=>nil, :yy=>nil, :zz=>nil, :ww=>"1.0"}
         
           @o0.xx = :required
           def xx var
             @o0.xx = var
           end
         
           @o0.yy = :required
           def yy var
             @o0.yy = var
           end
         
           @o0.zz = :required
           def zz var
             @o0.zz = var
           end
         
           @o0.ww = 1.0
           def ww var
             @o0.ww = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:vec3f=>nil, :ww=>"1.0"}
         
           @o1.vec3f = :required
           def vec3f var
             @o1.vec3f = var
           end
         
           @o1.ww = 1.0
           def ww var
             @o1.ww = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
     Enhancement.stack << FXVec4f.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVerticalFrame
     include Enhancement
     attr_accessor :_o     
   end
   def fx_vertical_frame name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"DEFAULT_SPACING", :padRight=>"DEFAULT_SPACING", :padTop=>"DEFAULT_SPACING", :padBottom=>"DEFAULT_SPACING", :hSpacing=>"DEFAULT_SPACING", :vSpacing=>"DEFAULT_SPACING"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = DEFAULT_SPACING
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = DEFAULT_SPACING
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = DEFAULT_SPACING
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = DEFAULT_SPACING
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = DEFAULT_SPACING
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = DEFAULT_SPACING
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXVerticalFrame.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXVisual
     include Enhancement
     attr_accessor :_o     
   end
   def fx_visual name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :flgs=>nil, :d=>"32"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.flgs = :required
           def flgs var
             @o0.flgs = var
           end
         
           @o0.d = 32
           def d var
             @o0.d = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXVisual.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXWindow
     include Enhancement
     attr_accessor :_o     
   end
   def fx_window name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:p=>nil, :opts=>"0", :x=>"0", :y=>"0", :width=>"0", :height=>"0"}
         
           @o0.p = :required
           def p var
             @o0.p = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
         @o1 = OpenStruct.new
         #{:a=>nil, :vis=>nil}
         
           @o1.a = :required
           def a var
             @o1.a = var
           end
         
           @o1.vis = :required
           def vis var
             @o1.vis = var
           end
         
         def instance a=nil, &block
            @o1.instance_name = a
            @o1.instance_block = block
         end
     
         @o2 = OpenStruct.new
         #{:a=>nil, :own=>nil, :opts=>nil, :x=>nil, :y=>nil, :w=>nil, :h=>nil}
         
           @o2.a = :required
           def a var
             @o2.a = var
           end
         
           @o2.own = :required
           def own var
             @o2.own = var
           end
         
           @o2.opts = :required
           def opts var
             @o2.opts = var
           end
         
           @o2.x = :required
           def x var
             @o2.x = var
           end
         
           @o2.y = :required
           def y var
             @o2.y = var
           end
         
           @o2.w = :required
           def w var
             @o2.w = var
           end
         
           @o2.h = :required
           def h var
             @o2.h = var
           end
         
         def instance a=nil, &block
            @o2.instance_name = a
            @o2.instance_block = block
         end
     
     Enhancement.stack << FXWindow.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXWizard
     include Enhancement
     attr_accessor :_o     
   end
   def fx_wizard name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:owner=>nil, :name=>nil, :image=>nil, :opts=>"DECOR_TITLE|DECOR_BORDER|DECOR_RESIZE", :x=>"0", :y=>"0", :width=>"0", :height=>"0", :padLeft=>"10", :padRight=>"10", :padTop=>"10", :padBottom=>"10", :hSpacing=>"10", :vSpacing=>"10"}
         
           @o0.owner = :required
           def owner var
             @o0.owner = var
           end
         
           @o0.name = :required
           def name var
             @o0.name = var
           end
         
           @o0.image = :required
           def image var
             @o0.image = var
           end
         
           @o0.opts = DECOR_TITLE|DECOR_BORDER|DECOR_RESIZE
           def opts var
             @o0.opts = var
           end
         
           @o0.x = 0
           def x var
             @o0.x = var
           end
         
           @o0.y = 0
           def y var
             @o0.y = var
           end
         
           @o0.width = 0
           def width var
             @o0.width = var
           end
         
           @o0.height = 0
           def height var
             @o0.height = var
           end
         
           @o0.padLeft = 10
           def pad_left var
             @o0.padLeft = var
           end
         
           @o0.padRight = 10
           def pad_right var
             @o0.padRight = var
           end
         
           @o0.padTop = 10
           def pad_top var
             @o0.padTop = var
           end
         
           @o0.padBottom = 10
           def pad_bottom var
             @o0.padBottom = var
           end
         
           @o0.hSpacing = 10
           def h_spacing var
             @o0.hSpacing = var
           end
         
           @o0.vSpacing = 10
           def v_spacing var
             @o0.vSpacing = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXWizard.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXXBMIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxxbm_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pixels=>"nil", :mask=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pixels = nil
           def pixels var
             @o0.pixels = var
           end
         
           @o0.mask = nil
           def mask var
             @o0.mask = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXXBMIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXXBMImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxxbm_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pixels=>"nil", :mask=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pixels = nil
           def pixels var
             @o0.pixels = var
           end
         
           @o0.mask = nil
           def mask var
             @o0.mask = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXXBMImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXXPMIcon
     include Enhancement
     attr_accessor :_o     
   end
   def fxxpm_icon name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :clr=>"0", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.clr = 0
           def clr var
             @o0.clr = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXXPMIcon.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

   class FXXPMImage
     include Enhancement
     attr_accessor :_o     
   end
   def fxxpm_image name = nil, &block
     
     
         @o0 = OpenStruct.new
         #{:a=>nil, :pix=>"nil", :opts=>"0", :width=>"1", :height=>"1"}
         
           @o0.a = :required
           def a var
             @o0.a = var
           end
         
           @o0.pix = nil
           def pix var
             @o0.pix = var
           end
         
           @o0.opts = 0
           def opts var
             @o0.opts = var
           end
         
           @o0.width = 1
           def width var
             @o0.width = var
           end
         
           @o0.height = 1
           def height var
             @o0.height = var
           end
         
         def instance a=nil, &block
            @o0.instance_name = a
            @o0.instance_block = block
         end
     
     Enhancement.stack << FXXPMImage.new(Enhancement.stack.last)
     self.instance_eval &block
     Enhancement.stack.pop
   end

end 
