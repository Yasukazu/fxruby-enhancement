=begin rdoc

NOTE WELL:
  This file is generated by fxruby-enhancement.
  Do NOT modify this file. Modify the template
  file instead!!!!
=end

module Fox
  module Enhancement
    module Mapper
      class << self
        def fox_classes
          Fox.constants.select { |k|
            Fox.const_get(k).instance_of? Class
          }
        end

        def fox_initialize_parms
          fox_classes.map { |klass|
            [klass, Fox.const_get(klass)
                .instance_method(:initialize)
                .parameters
                .map{ |typ, nam|
               unless typ == :rest
                 [typ, nam]
               else
                 [:rest,
                  parm_hints(klass).map{ |parm| [:req, parm] }
                 ]
               end
             }
            ]
          }
        end
         
        HINTS = {
        }
        
        def parm_hints klass
          HINTS[klass]
        end        
      end
    end
  end

# Here we include enhancements to all FXRuby classes
<% for @class, @details in @api %>
   class <%= @class %>
     include Enhancement
     attr_accessor :_o     
   end
   def <%= @class.snake %> name = nil, &block
     <% @i=0 %>
     <% for @iniparams in @details[:initialize].compact %>
         <%= "@o#{@i}" %> = OStruct.new
         #<%= @iniparams %>
         <% for @param, @default in @iniparams %>
           <%= "@o#{@i}.#{@param}" %> = <%= (@default) ? @default : ":required" %>
           def <%= "#{@param.snake}" %> var
             <%= "@o#{@i}.#{@param}" %> = var
           end
         <% end %>
         def instance a=nil, &block
            <%= "@o#{@i}" %>.instance_name = a
            <%= "@o#{@i}" %>.instance_block = block
         end
     <% @i+=1; end unless @details[:initialize].nil? %>
     
   end
<% end %>
end 
